---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webshell.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "webshell.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "webshell.selectorLabels" . | nindent 6 }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webshell.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webshell.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: welcome-msg
        image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.init.command }}
        command: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: shared-data
          mountPath: /home/project
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.theia.securityContext | nindent 12 }}
          image: "{{ .Values.theia.image.repository }}:{{ .Values.theia.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: USER
            value: {{ .Values.user }}
          - name: THEIA_WEBVIEW_EXTERNAL_ENDPOINT
            value: {{ .Values.theia.webview_url | quote }}
          - name: CLUSTER_K8S_API_HOST
            value: {{ .Values.cluster_k8s_api_host | quote }}
          ports:
            - name: web
              containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.theia.resources | nindent 12 }}
          volumeMounts:
          - name: shared-data
            mountPath: /home/project
        {{- if .Values.dind.enabled }}
        - name: dind
          image: "{{ .Values.dind.image.repository }}:{{ .Values.dind.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - --registry-mirror=https://mirror.gcr.io
          env:
          - name: DOCKER_TLS_CERTDIR
            value: /home/project/.tls
          ports:
          - containerPort: 2376
            protocol: TCP
          resources:
            {{- toYaml .Values.dind.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities: {}
            privileged: true
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          tty: true
          readinessProbe:
            tcpSocket:
              port: 2376
            initialDelaySeconds: 2
            timeoutSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 2376
            initialDelaySeconds: 5
            timeoutSeconds: 10
          volumeMounts:
          - name: shared-data
            mountPath: /home/project
          - name: docker-volume
            mountPath: /var/lib/docker
        {{- end }}
        {{- if .Values.openshift }}
        - name: oauth-proxy
          image: "{{ .Values.openshiftOauthProxy.image.repository }}:{{ .Values.openshiftOauthProxy.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8888
            protocol: TCP
            name: oauth-proxy
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-webshell-proxy-tls
          - mountPath: /etc/proxy/secrets
            name: secret-webshell-proxy
          args:
          - -provider=openshift
          - -https-address=:8888
          - -http-address=
          - -upstream=http://localhost:3000
          - '-openshift-sar={"namespace":"{{ .Release.Namespace }}","resource":"services","name":"{{ include "webshell.fullname" . }}","verb":"list"}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -openshift-service-account={{ include "webshell.serviceAccountName" . }}
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: shared-data
      {{- if .Values.theia.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "webshell.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: docker-volume
      {{- if .Values.dind.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "webshell.fullname" . }}-docker
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.openshift }}
      - name: secret-webshell-proxy-tls
        secret:
          defaultMode: 420
          secretName: webshell-proxy-tls
      - name: secret-webshell-proxy
        secret:
          defaultMode: 420
          secretName: webshell-proxy
      {{- end }}
