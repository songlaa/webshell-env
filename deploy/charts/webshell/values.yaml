# Default values for webshell.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

user: "user1"
password: "changeme"

# Set to true when deploying on OpenShift
openshift: false

cluster_k8s_api_host: api.training.cluster.songlaa.ch

image:
  pullPolicy: IfNotPresent

theia:
  webview_url: "{{uuid}}.webview.{{hostname}}"
  image:
    repository: ghcr.io/songlaa/theia
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 50m
      memory: 50Mi
  securityContext: {}
    # Uncomment for OpenShift
    #privileged: true
    #runAsUser: 1001
  persistence:
    enabled: true
    pvcsize: 1Gi
    # Define StorageClass
    storageclass: cloudscale-volume-ssd

init:
  image:
    repository: quay.io/prometheus/busybox
    tag: latest
  command:
  - sh
  - -c
  - echo Welcome to the songlaa theia ide > /home/project/welcome

dind:
  enabled: true
  image:
    repository: docker
    tag: 27.3.1-dind
  resources: {}
  persistence:
    enabled: false
    pvcsize: 50Gi
    storageclass: cloudscale-volume-ssd

openshiftOauthProxy:
  # Set to true when deploying on OpenShift
  enabled: false
  image:
    repository: registry.redhat.io/openshift4/ose-oauth-proxy
    tag: v4.13

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Set empty podSecurityContext when deploying on OpenShift
#podSecurityContext: {}
podSecurityContext:
  fsGroup: 1001

rbac:
  create: true

reset:
  enabled: false
  schedule: 0 */1 * * *

service:
  type: ClusterIP
  port: 3000

updateStrategy:
  type: RollingUpdate

ingress:
  enabled: false
  className: ""
  annotations: {}
    # route.openshift.io/termination: reencrypt
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
